Test 1
105
{{-0.051266, -1.906932,  1.239191, -0.212754, -0.376303,  0.066033,
  -1.017064,  0.907624, -0.682124, -0.461218},
 { 0.965666,  0.560664,  0.749932, -0.31456 ,  0.366249,  0.608089,
  -1.08684 ,  0.120559,  1.402025, -0.434259},
 {-1.254242,  0.331579, -0.308601, -0.153735,  0.678931, -1.913554,
  -0.942458, -1.745543, -1.020945, -0.162069},
 {-0.657971,  0.422113,  0.624023,  0.50164 ,  0.841435, -1.64025 ,
   1.058005, -0.091784, -0.724035, -0.40046 },
 { 0.445325,  0.95994 , -1.346354,  2.018899,  1.082376, -1.785718,
  -0.272337, -0.290368,  1.656147, -1.234569},
 {-1.057685,  0.138414, -0.0859  , -0.136231, -1.137115,  0.638136,
  -0.491604, -1.246285, -0.379932, -0.271258},
 {-1.454634,  0.451675,  1.124807,  2.669873,  1.3331  , -0.967642,
  -0.251439,  0.220661, -1.539361,  0.743418},
 {-0.565433,  0.00785 , -1.126791,  1.513816, -0.607294,  0.418322,
   0.986557, -0.301359, -0.017633,  0.599116},
 {-0.302605, -0.745466, -0.128523,  1.247992,  1.06226 , -1.628633,
   0.112428, -0.991502,  0.678795,  0.409707},
 {-0.489514, -0.00982 , -1.320182,  0.425741,  0.466486, -0.402871,
  -0.001272, -0.724976, -0.795849, -1.158087}}
1

Test 2
{105,  10,  10}
{105}

Test 3
{10, 10, 10}
{10}
{10, 10, 10}
{10}

Test 4
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
15
15

Test 5
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{15, 10, 10}
{15}

Test 6
{{{-0.051266, -1.906932,  1.239191},
  {-0.212754, -0.376303,  0.066033},
  {-1.017064,  0.907624, -0.682124}},
 {{-0.461218,  0.965666,  0.560664},
  { 0.749932, -0.31456 ,  0.366249},
  { 0.608089, -1.08684 ,  0.120559}},
 {{ 1.402025, -0.434259, -1.254242},
  { 0.331579, -0.308601, -0.153735},
  { 0.678931, -1.913554, -0.942458}},
 {{-1.745543, -1.020945, -0.162069},
  {-0.657971,  0.422113,  0.624023},
  { 0.50164 ,  0.841435, -1.64025 }},
 {{ 1.058005, -0.091784, -0.724035},
  {-0.40046 ,  0.445325,  0.95994 },
  {-1.346354,  2.018899,  1.082376}},
 {{-1.785718, -0.272337, -0.290368},
  { 1.656147, -1.234569, -1.057685},
  { 0.138414, -0.0859  , -0.136231}},
 {{-1.137115,  0.638136, -0.491604},
  {-1.246285, -0.379932, -0.271258},
  {-1.454634,  0.451675,  1.124807}},
 {{ 2.669873,  1.3331  , -0.967642},
  {-0.251439,  0.220661, -1.539361},
  { 0.743418, -0.565433,  0.00785 }},
 {{-1.126791,  1.513816, -0.607294},
  { 0.418322,  0.986557, -0.301359},
  {-0.017633,  0.599116, -0.302605}},
 {{-0.745466, -0.128523,  1.247992},
  { 1.06226 , -1.628633,  0.112428},
  {-0.991502,  0.678795,  0.409707}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{-0.489514, -0.00982 , -1.320182},
  { 0.425741,  0.466486, -0.402871},
  {-0.001272, -0.724976, -0.795849}},
 {{-1.158087,  0.574218,  0.932622},
  { 0.090915, -1.473995,  0.110558},
  { 0.25368 ,  0.264882,  0.724772}},
 {{-0.535355, -0.190605, -0.470677},
  {-0.362615, -0.788568,  1.25657 },
  {-1.206462,  0.282526, -0.499245}},
 {{ 0.500688,  1.371193, -0.712783},
  {-0.347297, -1.264064,  0.686295},
  {-1.201706,  0.625201,  0.493573}},
 {{ 0.62295 , -0.409043, -0.317792},
  {-0.9185  ,  0.488289,  0.193506},
  { 1.901467,  0.649441, -0.134372}},
 {{-0.227225, -0.122096, -0.037   },
  { 1.777928,  1.684162, -0.101242},
  {-1.58267 ,  1.065337,  0.134791}},
 {{ 0.048458, -0.036618,  0.674609},
  { 1.037214, -0.902752, -1.711276},
  { 0.832526,  0.829252, -1.519225}},
 {{-1.395665,  0.469655,  0.620688},
  { 0.505927, -0.665298,  0.713206},
  { 0.160408, -0.861148, -0.181355}},
 {{ 0.309256,  0.58354 , -1.702487},
  {-0.640579, -0.406393, -1.724941},
  {-1.598324,  1.261497, -0.580701}},
 {{-0.069768, -0.224551, -1.626198},
  {-0.071688,  0.08603 , -1.369931},
  {-1.010371, -0.943652,  0.920108}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{-1.268939, -1.342901,  0.303793},
  {-1.682761, -0.856373, -1.075533},
  {-1.665213, -1.63913 ,  2.28072 }},
 {{ 0.822923, -0.788787,  0.128782},
  {-0.838485, -1.633973, -0.679806},
  {-0.847589, -0.05682 , -0.306761}},
 {{ 1.747711,  0.318342,  0.488139},
  {-0.044505,  0.34878 , -0.145817},
  {-1.378805,  1.480791, -0.734288}},
 {{-0.762491,  0.763195, -1.196094},
  {-1.189575, -1.564949,  0.620435},
  {-0.375636,  0.277563,  0.366504}},
 {{-0.37363 , -1.28615 ,  1.41318 },
  {-0.256392,  1.244084,  0.241369},
  {-0.985086,  1.200156, -1.768924}},
 {{-1.687739,  1.905483,  1.372458},
  {-0.202222, -0.443814, -2.540175},
  {-1.021243, -0.767847,  0.777825}},
 {{-1.362803,  0.447543, -0.50427 },
  {-0.200252,  0.737224,  1.482159},
  { 0.350787, -0.717043,  0.240527}},
 {{ 0.165348,  0.045853,  1.501076},
  {-0.356818, -0.486026,  1.340376},
  { 0.581844, -2.186875,  0.61837 }},
 {{-0.938191,  1.707235,  1.360005},
  {-0.926636,  1.462474, -0.918219},
  {-2.192302,  1.733956,  0.857707}},
 {{-1.552793,  0.88106 ,  0.352627},
  {-1.102668,  0.298487, -0.38835 },
  { 0.364419, -1.021791,  0.507776}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{ 1.836702, -0.135901, -1.146031},
  {-0.059971,  0.808687,  0.597621},
  { 0.921025,  1.200382, -0.902958}},
 {{-0.951187,  0.056744,  1.230952},
  { 0.434264,  1.098255,  1.28662 },
  { 0.165513,  1.181243,  1.08116 }},
 {{ 0.243917, -0.17109 , -0.429521},
  {-0.953705,  0.782416,  0.535421},
  {-0.337068, -0.639027,  0.387164}},
 {{-0.857734, -1.135485, -1.204075},
  { 0.877588,  1.004945,  1.145777},
  {-0.027102,  2.727448,  0.273691}},
 {{ 0.788972, -1.2371  , -0.53096 },
  { 0.185268,  0.093469, -0.286337},
  { 0.604857, -0.251936,  0.89913 }},
 {{ 1.607887, -1.301065,  0.760126},
  {-1.221836, -0.77982 ,  0.407167},
  {-0.205485,  0.626246, -1.779469}},
 {{ 1.206339, -0.541069,  0.874888},
  { 1.438783,  0.58493 , -0.688068},
  { 0.303054,  0.710998, -0.325589}},
 {{-1.458439, -0.954315,  0.171716},
  {-0.96418 ,  0.069069, -0.085084},
  {-0.343871, -0.618823,  0.390241}},
 {{-1.850256, -0.902633, -0.924026},
  {-0.217914,  0.570464,  0.1089  },
  { 0.559674, -1.462398, -0.728028}},
 {{-0.019706,  1.572537, -0.351208},
  {-0.670893, -1.701382,  0.13892 },
  { 1.222391, -0.50063 , -0.411279}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{ 0.963007,  0.991581,  0.554766},
  { 0.526704,  0.147754,  1.536328},
  {-0.540797,  2.027946, -0.026131}},
 {{ 1.684195, -0.524772, -0.142497},
  {-1.084146,  0.392498, -0.42115 },
  { 1.270069, -1.447687, -0.91932 }},
 {{-1.907708, -1.016577, -1.593563},
  { 0.121512, -0.374772,  0.985534},
  {-0.606691,  0.305357, -0.356699}},
 {{-0.309552, -0.741335,  0.440305},
  { 0.497129,  0.242535,  0.537881},
  {-1.438122,  0.397653,  1.18866 }},
 {{-1.159464,  0.82416 ,  0.172279},
  {-0.353175,  0.783793,  0.464739},
  {-0.231437, -0.216597,  0.223359}},
 {{ 0.153341,  0.720659,  0.631269},
  { 0.485397, -1.240022,  0.089236},
  { 0.500803,  0.77461 ,  0.789466}},
 {{ 0.75434 ,  0.314804, -1.792628},
  {-2.478449,  1.102347,  0.47717 },
  {-0.556723,  0.301152,  0.784317}},
 {{ 0.612163,  0.266201, -0.799968},
  {-1.801204,  2.724243, -0.215939},
  {-0.50555 ,  1.084252, -1.080643}},
 {{-0.455394, -1.416394, -0.05862 },
  { 1.371289, -0.419967, -1.133761},
  { 0.85358 , -1.369001,  0.484095}},
 {{ 1.125264, -2.466517, -0.017985},
  {-0.784697, -0.892229, -0.893593},
  {-1.895529,  2.435208, -0.889639}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{ 1.805733, -1.416171,  0.744431},
  {-0.272804,  1.515411, -1.10811 },
  {-1.31327 , -0.506362,  0.826458}},
 {{-1.61196 , -0.134643, -0.086606},
  {-0.108172,  0.718353, -1.016792},
  {-0.965204, -0.266265, -0.724121}},
 {{ 0.451145,  1.410254, -1.37865 },
  {-0.131912, -0.736679,  0.42126 },
  {-0.160231,  0.844769,  1.662264}},
 {{-1.32694 , -0.837512, -0.132641},
  {-0.65521 ,  0.424079, -0.56224 },
  { 0.163328, -0.090509,  0.303382}},
 {{ 0.67595 , -0.167288, -1.223254},
  {-0.499257, -1.414429, -0.114504},
  { 1.792705, -0.182385,  0.09276 }},
 {{ 0.202835,  0.903428,  1.094595},
  {-1.655614,  0.169925,  1.04018 },
  {-0.550667,  0.576693, -0.050266}},
 {{-1.112708,  1.943595, -2.066254},
  { 0.376038, -0.219185,  0.549599},
  {-0.885237,  0.32259 , -0.449772}},
 {{ 0.790567,  1.690074,  0.218961},
  {-1.751077, -0.139271,  1.144889},
  { 0.653499,  0.69348 , -0.566989}},
 {{ 2.967625,  0.516867, -0.75115 },
  {-0.448441, -0.240197,  1.216097},
  {-0.639031,  0.653242,  2.154483}},
 {{ 1.311621,  0.343337, -0.1684  },
  {-1.506686, -1.289872,  0.623594},
  {-1.488837, -0.708837,  1.514485}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{ 1.067462,  0.050192,  0.885317},
  {-0.830733,  0.869002, -0.977044},
  { 0.316611,  0.503785, -0.537273}},
 {{ 0.017442,  0.706204,  1.497198},
  {-0.865092,  0.401245,  1.329174},
  { 0.05603 ,  0.773047, -0.396511}},
 {{-0.573222, -1.774424,  1.197717},
  {-0.553416, -0.268685,  0.991945},
  { 0.332091, -1.101922,  0.408308}},
 {{ 2.481807,  0.212085,  0.452805},
  { 0.735946,  0.010302, -2.872447},
  {-0.590844,  0.648869,  0.35345 }},
 {{-0.08159 , -0.59578 ,  0.25301 },
  { 0.053834, -0.974293,  0.167631},
  {-0.82499 ,  0.047382, -0.618361}},
 {{ 0.36077 ,  0.843427,  0.7515  },
  {-0.040809, -0.760521, -1.482393},
  {-0.309325, -1.17651 ,  0.567676}},
 {{-1.328319,  0.410773, -0.180367},
  {-1.582331, -0.986136,  0.107628},
  { 0.718804, -0.648819,  1.533099}},
 {{-1.152199,  0.667891,  0.565176},
  { 0.713115, -0.791847, -0.380618},
  { 0.707775, -1.512157, -0.147259}},
 {{-1.151534,  0.221074,  0.278741},
  {-0.548101,  0.66298 ,  1.169877},
  {-0.817684,  1.554854, -0.077931}},
 {{-0.849836,  0.375918,  0.773575},
  { 1.279174, -0.743931, -0.56113 },
  { 0.916096,  0.12487 , -0.032373}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{-2.600068,  0.865298,  0.50298 },
  { 0.019059, -1.470069, -0.607004},
  {-0.592396,  2.121305, -2.026049}},
 {{-2.034825, -0.31543 ,  0.305096},
  { 0.118898, -0.065306,  1.416806},
  { 0.87048 , -1.424331,  2.214683}},
 {{ 2.68785 ,  1.058033,  0.465227},
  { 0.928317, -0.459003,  0.985926},
  {-0.078016, -2.225086, -0.295275}},
 {{ 0.841239,  0.1825  , -0.670391},
  { 0.329427,  0.181576,  0.047564},
  { 0.266886,  0.004246, -0.140919}},
 {{ 0.940507,  1.556624,  0.842515},
  {-0.456403,  1.553254, -1.090275},
  { 0.89832 , -1.033064,  0.6481  }},
 {{-0.999015,  1.276157, -0.381791},
  { 0.760311,  0.865581,  0.742573},
  { 0.545048,  1.358051, -0.770478}},
 {{-0.122376, -0.017447, -0.247753},
  { 0.00059 , -1.677222,  0.237293},
  {-0.061297,  1.238714, -0.053378}},
 {{-0.564912, -0.635456,  0.717134},
  { 0.80244 , -0.001732, -0.307271},
  {-1.13823 ,  0.371366,  1.065849}},
 {{-0.057976, -1.980734,  1.08157 },
  {-0.402853,  0.896463,  0.655633},
  { 0.566536,  0.020996,  0.914251}},
 {{ 0.410274, -1.12064 , -1.704198},
  { 0.094847,  0.144785,  1.118298},
  { 0.821404, -1.563514, -0.999176}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{ 0.317242, -0.13307 ,  0.313951},
  { 0.775629, -0.922122, -0.079633},
  {-0.378936, -1.257434, -0.870542}},
 {{-1.300914, -0.268905, -1.321125},
  {-0.926656,  1.135739, -0.811438},
  { 0.697044,  0.251537, -1.206633}},
 {{-0.275579,  1.276973,  0.784686},
  { 0.899832,  1.761446, -0.447922},
  {-1.253127,  0.644915,  0.102485}},
 {{ 0.495206,  0.787785, -0.062561},
  { 0.652641, -1.034468, -0.784141},
  { 0.479715,  0.913123, -1.26219 }},
 {{-1.09571 , -2.2677  ,  0.48298 },
  {-0.02078 ,  0.739544,  0.193242},
  { 1.031413, -0.800399,  0.244027}},
 {{-0.908588, -1.749634,  0.650721},
  {-0.329372,  0.647238,  1.018972},
  { 0.311468, -1.493905,  0.516999}},
 {{ 1.097538,  1.473493, -0.117173},
  {-0.358307, -0.293641, -1.793647},
  { 0.927598, -0.581   ,  0.529898}},
 {{ 1.405578, -0.129426,  0.908642},
  {-0.310159, -2.241338, -0.627411},
  { 1.396349, -0.527269,  0.092693}},
 {{-0.052976,  0.582777,  0.917448},
  { 0.951204,  1.033133, -1.880636},
  { 1.912354, -1.374535, -0.969005}},
 {{-0.157565,  0.155562, -0.501006},
  {-0.281068,  1.045858, -0.435628},
  {-0.675313,  1.566639,  1.976804}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
{{{-0.015909,  0.974704, -0.623472},
  { 1.296193, -1.066313, -1.595934},
  { 1.458093, -0.059399, -0.468355}},
 {{-0.547298,  0.95056 , -1.16191 },
  {-0.884932, -0.378574,  1.612034},
  { 0.642031,  1.819709, -1.270794}},
 {{-0.011563,  0.041172, -0.284823},
  { 0.95611 ,  1.352713,  0.90663 },
  {-0.988034,  0.511615,  1.442812}},
 {{-1.855615, -0.6404  , -0.0952  },
  { 0.784305,  1.726007, -0.459437},
  { 1.032116, -0.720693, -2.241637}},
 {{ 0.504861,  1.201433, -0.336883},
  { 2.473916, -0.595938, -0.173832},
  {-0.925477, -0.73346 , -2.372606}},
 {{-1.488362,  0.637932,  0.007545},
  {-0.009492, -0.03387 , -0.189659},
  { 1.520766, -0.238015,  0.268121}},
 {{-0.211578, -0.121888, -0.699876},
  { 0.342793, -1.121405, -1.195187},
  { 0.974414,  0.804785,  0.75277 }},
 {{ 0.499776, -1.971136, -1.001221},
  {-0.346243,  1.653475, -1.54688 },
  { 0.158115, -0.90207 ,  0.693679}},
 {{-1.256477, -1.747005, -0.321219},
  { 1.578707, -2.034649,  0.879697},
  {-1.181805, -0.721874, -0.216134}},
 {{-0.143992, -0.53349 ,  0.509315},
  {-0.503525, -0.240098,  1.876673},
  { 1.613687, -1.432728, -0.302909}}}
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}

Test 7
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
{10, 10, 10}
{10}
############################################
#CASE: data WITHOUT label
############################################
ORIGINAL data and label:
X.shape: (10, 4)
X: 
{{ 0,  1,  2,  3},
 { 4,  5,  6,  7},
 { 8,  9, 10, 11},
 {12, 13, 14, 15},
 {16, 17, 18, 19},
 {20, 21, 22, 23},
 {24, 25, 26, 27},
 {28, 29, 30, 31},
 {32, 33, 34, 35},
 {36, 37, 38, 39}}
t.shape: ()
t: 
0
=================================
Loading (1): with shuffle=false:
################################
batch_idx:1
(data.shape, label.shape): (3, 4), ()
data:
{{ 0,  1,  2,  3},
 { 4,  5,  6,  7},
 { 8,  9, 10, 11}}
label:
0
batch_idx:2
(data.shape, label.shape): (3, 4), ()
data:
{{12, 13, 14, 15},
 {16, 17, 18, 19},
 {20, 21, 22, 23}}
label:
0
batch_idx:3
(data.shape, label.shape): (4, 4), ()
data:
{{24, 25, 26, 27},
 {28, 29, 30, 31},
 {32, 33, 34, 35},
 {36, 37, 38, 39}}
label:
0


Loading (2): with shuffle=true + no seed (seed < 0):
when seed < 0: DO NOT call xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), ()
data:
{{ 4,  5,  6,  7},
 { 8,  9, 10, 11},
 {24, 25, 26, 27}}
label:
0
batch_idx:2
(data.shape, label.shape): (3, 4), ()
data:
{{ 0,  1,  2,  3},
 {16, 17, 18, 19},
 {20, 21, 22, 23}}
label:
0
batch_idx:3
(data.shape, label.shape): (4, 4), ()
data:
{{12, 13, 14, 15},
 {36, 37, 38, 39},
 {28, 29, 30, 31},
 {32, 33, 34, 35}}
label:
0


Loading (3): with shuffle=true + no seed (seed < 0):
when seed < 0: DO NOT call xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), ()
data:
{{ 0,  1,  2,  3},
 {32, 33, 34, 35},
 {20, 21, 22, 23}}
label:
0
batch_idx:2
(data.shape, label.shape): (3, 4), ()
data:
{{16, 17, 18, 19},
 { 4,  5,  6,  7},
 {24, 25, 26, 27}}
label:
0
batch_idx:3
(data.shape, label.shape): (4, 4), ()
data:
{{36, 37, 38, 39},
 {28, 29, 30, 31},
 {12, 13, 14, 15},
 { 8,  9, 10, 11}}
label:
0


NOTE: Loading (2) and (3): DO NOT CALL seed; so results are different.


Loading (4): with shuffle=true + with seed (seed >= 0):
when seed >= 0: CALL xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), ()
data:
{{ 4,  5,  6,  7},
 {16, 17, 18, 19},
 { 0,  1,  2,  3}}
label:
0
batch_idx:2
(data.shape, label.shape): (3, 4), ()
data:
{{12, 13, 14, 15},
 {36, 37, 38, 39},
 {32, 33, 34, 35}}
label:
0
batch_idx:3
(data.shape, label.shape): (4, 4), ()
data:
{{28, 29, 30, 31},
 { 8,  9, 10, 11},
 {24, 25, 26, 27},
 {20, 21, 22, 23}}
label:
0
Loading (5): with shuffle=true + with seed (seed >= 0):
when seed >= 0: CALL xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), ()
data:
{{ 4,  5,  6,  7},
 {16, 17, 18, 19},
 { 0,  1,  2,  3}}
label:
0
batch_idx:2
(data.shape, label.shape): (3, 4), ()
data:
{{12, 13, 14, 15},
 {36, 37, 38, 39},
 {32, 33, 34, 35}}
label:
0
batch_idx:3
(data.shape, label.shape): (4, 4), ()
data:
{{28, 29, 30, 31},
 { 8,  9, 10, 11},
 {24, 25, 26, 27},
 {20, 21, 22, 23}}
label:
0
NOTE: Loading (4) and (5): CALL xt::random::seed and use SAME seed => same results.


############################################
#CASE: data WITH label
WHEN label is available: 
	Assignment-1: ASSUME that dimension-0 on data = dimension-0 on label
############################################
ORIGINAL data and label:
X.shape: (10, 4)
X: 
{{ 0,  1,  2,  3},
 { 4,  5,  6,  7},
 { 8,  9, 10, 11},
 {12, 13, 14, 15},
 {16, 17, 18, 19},
 {20, 21, 22, 23},
 {24, 25, 26, 27},
 {28, 29, 30, 31},
 {32, 33, 34, 35},
 {36, 37, 38, 39}}
t.shape: (10,)
t: 
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
=================================
Loading (1): with shuffle=false:
################################
batch_idx:1
(data.shape, label.shape): (3, 4), (3,)
data:
{{ 0,  1,  2,  3},
 { 4,  5,  6,  7},
 { 8,  9, 10, 11}}
label:
{0, 1, 2}
batch_idx:2
(data.shape, label.shape): (3, 4), (3,)
data:
{{12, 13, 14, 15},
 {16, 17, 18, 19},
 {20, 21, 22, 23}}
label:
{3, 4, 5}
batch_idx:3
(data.shape, label.shape): (4, 4), (4,)
data:
{{24, 25, 26, 27},
 {28, 29, 30, 31},
 {32, 33, 34, 35},
 {36, 37, 38, 39}}
label:
{6, 7, 8, 9}


Loading (2): with shuffle=true + no seed (seed < 0):
when seed < 0: DO NOT call xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), (3,)
data:
{{ 8,  9, 10, 11},
 {12, 13, 14, 15},
 { 0,  1,  2,  3}}
label:
{2, 3, 0}
batch_idx:2
(data.shape, label.shape): (3, 4), (3,)
data:
{{20, 21, 22, 23},
 {24, 25, 26, 27},
 {28, 29, 30, 31}}
label:
{5, 6, 7}
batch_idx:3
(data.shape, label.shape): (4, 4), (4,)
data:
{{16, 17, 18, 19},
 {32, 33, 34, 35},
 {36, 37, 38, 39},
 { 4,  5,  6,  7}}
label:
{4, 8, 9, 1}


Loading (3): with shuffle=true + no seed (seed < 0):
when seed < 0: DO NOT call xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), (3,)
data:
{{24, 25, 26, 27},
 {12, 13, 14, 15},
 {36, 37, 38, 39}}
label:
{6, 3, 9}
batch_idx:2
(data.shape, label.shape): (3, 4), (3,)
data:
{{32, 33, 34, 35},
 { 8,  9, 10, 11},
 { 4,  5,  6,  7}}
label:
{8, 2, 1}
batch_idx:3
(data.shape, label.shape): (4, 4), (4,)
data:
{{16, 17, 18, 19},
 {28, 29, 30, 31},
 { 0,  1,  2,  3},
 {20, 21, 22, 23}}
label:
{4, 7, 0, 5}


NOTE: Loading (2) and (3): DO NOT CALL seed; so results are different.


Loading (4): with shuffle=true + with seed (seed >= 0):
when seed >= 0: CALL xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), (3,)
data:
{{ 4,  5,  6,  7},
 {16, 17, 18, 19},
 { 0,  1,  2,  3}}
label:
{1, 4, 0}
batch_idx:2
(data.shape, label.shape): (3, 4), (3,)
data:
{{12, 13, 14, 15},
 {36, 37, 38, 39},
 {32, 33, 34, 35}}
label:
{3, 9, 8}
batch_idx:3
(data.shape, label.shape): (4, 4), (4,)
data:
{{28, 29, 30, 31},
 { 8,  9, 10, 11},
 {24, 25, 26, 27},
 {20, 21, 22, 23}}
label:
{7, 2, 6, 5}


Loading (5): with shuffle=true + with seed (seed >= 0):
when seed >= 0: CALL xt::random:seed
################################
batch_idx:1
(data.shape, label.shape): (3, 4), (3,)
data:
{{ 4,  5,  6,  7},
 {16, 17, 18, 19},
 { 0,  1,  2,  3}}
label:
{1, 4, 0}
batch_idx:2
(data.shape, label.shape): (3, 4), (3,)
data:
{{12, 13, 14, 15},
 {36, 37, 38, 39},
 {32, 33, 34, 35}}
label:
{3, 9, 8}
batch_idx:3
(data.shape, label.shape): (4, 4), (4,)
data:
{{28, 29, 30, 31},
 { 8,  9, 10, 11},
 {24, 25, 26, 27},
 {20, 21, 22, 23}}
label:
{7, 2, 6, 5}
NOTE: Loading (4) and (5): CALL xt::random::seed and use SAME seed => same results.


############################################
#CASE: data WITHOUT label
############################################
ORIGINAL data and label:
X.shape: (10, 4)
X: 
{{ 0,  1,  2,  3},
 { 4,  5,  6,  7},
 { 8,  9, 10, 11},
 {12, 13, 14, 15},
 {16, 17, 18, 19},
 {20, 21, 22, 23},
 {24, 25, 26, 27},
 {28, 29, 30, 31},
 {32, 33, 34, 35},
 {36, 37, 38, 39}}
t.shape: ()
t: 
0
=================================
Loading (1): with shuffle=false:
Number of samples: 10
batch-size: 15
=> number of batches to be processed: 0
################################
NUMBER OF BATCHES PROCESSED: 0
